#+TITLE: Chromosomer Scaffolding
#+AUTHOR: Tony Arick
#+TODO: BAD TODO | GOOD QUEUE DONE SKIP
#+DRAWERS: HIDDEN
#+OPTIONS: d:RESULTS 
#+STARTUP: hideblocks align

#+PROPERTY:  header-args :exports results :eval never-export
#+OPTIONS: ^:nil

#+BEGIN_SRC conf :tangle .gitignore

#Ignore genome and split files (takes a few minutes to recreate)
genome.fa        
genome.part-*.fa 

#Ignore individual blast results (saving the cat'd version) 
fragment_alignments.part-*.txt

#Ignore everything chromosomer outputs except results and cat'd blast results
*.chromosomes.fa
*.fragment_map.txt
*.fragment_map_unlocalized.txt
*.fragment_map_unplaced.txt
*.length


#+END_SRC

#+NAME: genomes
| Species | Genome                                          |
|---------+-------------------------------------------------|
| D10-7   | analysis/assemble/D10-7/D10-7.k115.scaffolds.fa |
| D3-D-27 | analysis/assemble/D3-D-27/70/70-scaffolds.fa    |
| D4-12   | analysis/assemble/D4-12/70/70-scaffolds.fa      |
| D7-157  | analysis/assemble/D7-157/60/60-scaffolds.fa     |
| D9-4    | analysis/assemble/D9-4/70/70-scaffolds.fa       |
| D11-1   | analysis/assemble/D11-1/70/70-scaffolds.fa      |
| D2-2    | analysis/assemble/D2-2/65/65-scaffolds.fa       |
| D5-8    | analysis/assemble/D5-8/55/55-scaffolds.fa       |
| D7-4    | analysis/assemble/D7-4/50/50-scaffolds.fa       |
| D2-1-6  | analysis/assemble/D2-1-6/70/70-scaffolds.fa     |
| D6-7    | analysis/assemble/D6-7/45/45-scaffolds.fa       |
| D8-8    | analysis/assemble/D8-8/70/70-scaffolds.fa       |
| D10-8   | analysis/assemble/D10-8/40/40-scaffolds.fa      |
| D6-5    | analysis/assemble/D6-5/70/70-scaffolds.fa       |
| D1-35   | analysis/assemble/D1-35/70/70-scaffolds.fa      |
| D3-K-57 | analysis/assemble/D3-K-57/70/70-scaffolds.fa    |
| D4-185  | analysis/assemble/D4-185/60/60-scaffolds.fa     |
| D8-9    | analysis/assemble/D8-9/40/40-scaffolds.fa       |
| D3K-56  | analysis/assemble/D3K-56/60/60-scaffolds.fa     |


#+HEADER: :shebang #!/bin/bash :tangle split.pbs :mkdirp yes
#+HEADER: :prologue #PBS -N Assemble_By5_Second -l nodes=1:ppn=20:mem132 -l walltime=48:00:00 
#+BEGIN_SRC sh :var libs=genomes 
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT="$(git rev-parse --show-toplevel)"

while read -a data; do
mkdir $DIR/${data[0]}
cd $DIR/${data[0]}

ln -s $ROOT/${data[1]} genome.fa 
fasta-splitter.pl -n-parts 20 genome.fa
done  <<<"$libs"
#+END_SRC


#+HEADER: :shebang #!/bin/bash :tangle align.pbs :mkdirp yes
#+HEADER: :prologue #PBS -N Align -l nodes=1:ppn=20:mem132 -l walltime=48:00:00 -t 1-20
#+BEGIN_SRC sh :var libs=genomes 
cd $PBS_O_WORKDIR
ROOT="$(git rev-parse --show-toplevel)"
DIR=$ROOT/analysis/assemble/chromosomer/

export PYTHONPATH=$ROOT/bin/chromosomer/lib/python2.7/
PATH=$PATH:$ROOT/bin/chromosomer/bin/:/usr/local/igbb/blast-2.2.30+/bin

DB=$ROOT/db/G.raimondii_JGI_221_v2.0.assembly.fasta

if [ -z "$line" ]; then exit; fi
read -a data < <(sed -n -e "${line}p" <<<"$libs")

cd $DIR/${data[0]} || exit
part=$(printf "part-%02d" $PBS_ARRAYID)

/usr/local/igbb/blast-2.2.30+/bin/blastn -num_threads $PBS_NUM_PPN -query genome.$part.fa -db $DB  -outfmt 6 -out fragment_alignments.$part.txt


#+END_SRC



#+HEADER: :shebang #!/bin/bash :tangle run.pbs :mkdirp yes
#+HEADER: :prologue #PBS -N Assemble_By5_Second -l nodes=1:ppn=20:mem132 -l walltime=48:00:00
#+BEGIN_SRC sh :var libs=genomes 
cd $PBS_O_WORKDIR
ROOT="$(git rev-parse --show-toplevel)"
DIR=$ROOT/analysis/assemble/chromosomer/

export PYTHONPATH=$ROOT/bin/chromosomer/lib/python2.7/
export PERL5LIB=/usr/local/igbb/BioPerl/lib/perl5:$PERL5LIB
PATH=$PATH:$ROOT/bin/chromosomer/bin/:/usr/local/igbb/blast-2.2.30+:/usr/local/igbb/BioPerl/bin


DB=$ROOT/db/G.raimondii_JGI_221_v2.0.assembly.fasta

read -a data < <(sed -n -e "${PBS_ARRAYID}p" <<<"$libs")

cd $DIR/${data[0]} || exit

chromosomer fastalength $ROOT/${data[1]} ${data[0]}.length

cat fragment_alignments.part-*.txt > ${data[0]}.fragment_alignments.txt

chromosomer fragmentmap ${data[0]}.fragment_alignments.txt 100 ${data[0]}.length ${data[0]}.fragment_map.txt

chromosomer assemble ${data[0]}.fragment_map.txt $ROOT/${data[1]} ${data[0]}.chromosomes.fa

awk '{print $0, "Unplaced"}' ${data[0]}.fragment_map_unplaced.txt |
     cat - ${data[0]}.fragment_map_unlocalized.txt |
     sort -k1,1 |
     join -j 1 -o '1.2 1.1 2.2' - <(bp_seqconvert.pl --from=fasta --to=tab <genome.fa | sort -k1,1) |
     awk '{printf ">%s_%d\n%s\n", $1, $2, $3}' |
     fold |
     cat ${data[0]}.chromosomes.fa - > ${data[0]}.complete.fa

#+END_SRC

