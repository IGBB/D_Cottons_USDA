#!/usr/bin/bash
# Corrinne Grover, December 2016

# if less than two arguments supplied, display usage
        if [  $# -le 0 ]
        then
                echo "This script removes sequences from an aligned fasta file that have more than 80% gaps, and then removes remaining alignment positions that have gaps."
                echo "This script requires Python and PyCogent (http://pycogent.org/)"
                # note Pycogent is stupid and cannot take passed variable names as arguments for LoadSeqs. Lame.
                echo -e "\nUsage:\n$0 infile \n"
                exit 1
        fi

# user supplied -h or --help; display usage
        if [[ ( $# == "--help") ||  $# == "-h" ]]
        then
                echo "This script removes sequences from an aligned fasta file that have more than 90% gaps, and then removes remaining alignment positions that have >10% gaps."
                echo "This script requires Python and PyCogent (http://pycogent.org/)"
                echo -e "\nUsage:\n$0 infile \n"
                exit 0
        fi

module load python/2.7.12
module load clustalw/2.1

sed 's/-/_/g' $1 | sed 's/[/]scratch[/]maa146[/]shane[.]gossypiumD[/][/]analysis[/]d[.]align[/]//g' | sed 's/N/-/g' | sed 's/[.]all[.]bam//g' | sed 's/Gturn1/o/g' | sed 's/[.][G][a-z][a-z][a-z][a-z][12]//g' $

python - << END

import sys
from cogent import LoadSeqs, DNA

aln = LoadSeqs("${1%.fasta}.renamed.fasta", moltype=DNA, format='fasta')
filtered_aln = aln.omitGapSeqs(0.10)
filtered_gaps = filtered_aln.omitGapPositions(0.1)
filtered_gaps.writeToFile("${1%.fasta}.Nfil.fasta")

#sys.exit()
END

sed -i.bak 's/-/N/g' ${1%.fasta}.Nfil.fasta

outgroups=`grep ">F" ${1%.fasta}.Nfil.fasta | wc -l`

D1=`grep ">D1_" ${1%.fasta}.Nfil.fasta | wc -l`
D2=`grep ">D2_" ${1%.fasta}.Nfil.fasta | wc -l`
D3d=`grep ">D3D" ${1%.fasta}.Nfil.fasta | wc -l`
D3k=`grep ">D3K" ${1%.fasta}.Nfil.fasta | wc -l`
D4=`grep ">D4" ${1%.fasta}.Nfil.fasta | wc -l`
D5=`grep ">D5" ${1%.fasta}.Nfil.fasta | wc -l`
D6=`grep ">D6" ${1%.fasta}.Nfil.fasta | wc -l`
D7=`grep ">D7" ${1%.fasta}.Nfil.fasta | wc -l`
D8=`grep ">D8" ${1%.fasta}.Nfil.fasta | wc -l`
D9=`grep ">D9" ${1%.fasta}.Nfil.fasta | wc -l`
D10=`grep ">D10" ${1%.fasta}.Nfil.fasta | wc -l`
D11=`grep ">D11" ${1%.fasta}.Nfil.fasta | wc -l`

mkdir -p filtered
mkdir -p raxml
mkdir -p bayes
mkdir -p fasta


if [ $outgroups  -lt 1 ] || [ $D1 -lt 1 ] || [ $D2 -lt 2 ] ||  [ $D3d -lt 1 ] || [ $D3k -lt 1 ] || [ $D4 -lt 2 ] || [ $D5 -lt 1 ] || [ $D6 -lt 1 ] || [ $D7 -lt 1 ] || [ $D8 -lt 1 ] || [ $D9 -lt 1 ] || [ $D10$
then
  mv ${1%.fasta}.Nfil.fasta filtered
else
  clustalw2 -infile=${1%.fasta}.Nfil.fasta -convert -type=nucleotide -output=phylip -outfile=${1%.fasta}.phy
  mv ${1%.fasta}.phy raxml
  clustalw2 -infile=${1%.fasta}.Nfil.fasta -convert -type=nucleotide -output=nexus -outfile=${1%.fasta}.Nfil.nxs
  echo >> ${1%.fasta}.Nfil.nxs
  cat ${1%.fasta}.Nfil.nxs bayes.block | sed "s/FILENAME/${1%.fasta}/" > ${1%.fasta}.nxs
  mv ${1%.fasta}.nxs bayes
  rm ${1%.fasta}.Nfil.nxs
  mv ${1%.fasta}.Nfil.fasta fasta
fi
